generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Statuses {
  active
  inactive
}

enum FilterTypes {
  country
  device
  browser
  language
  os
  ip_range
  referrer
  keyword
  utm_source
  utm_medium
  utm_campaign
}

enum FilterOperations {
  equals
  contains
  not_equals
  regex
}

enum Currencies {
  usd
  eur
  rub
}

model Campaign {
  id        Int               @id @default(autoincrement())
  createdAt DateTime          @default(now()) @map("created_at")
  updatedAt DateTime          @updatedAt @map("updated_at")
  name      String?
  status    Statuses          @default(active)
  code      String            @unique
  streams   Stream[]
  expenses  CampaignExpense[]
  profits   CampaignProfit[]
  currency  Currencies        @default(usd)

  @@map("campaigns")
}

model CampaignExpense {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now()) @map("created_at")
  campaign   Campaign @relation(fields: [campaignId], references: [id])
  campaignId Int      @map("campaign_id")
  amount     Float

  @@map("campaign_expenses")
}

model CampaignProfit {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now()) @map("created_at")
  campaign   Campaign @relation(fields: [campaignId], references: [id])
  campaignId Int      @map("campaign_id")
  amount     Float

  @@map("campaign_profits")
}

model Stream {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  campaign   Campaign @relation(fields: [campaignId], references: [id])
  campaignId Int      @map("campaign_id")
  name       String?
  targetUrl  String   @map("target_url")
  status     Statuses @default(active)
  weight     Int      @default(1)
  filters    Filter[]

  @@map("streams")
}

model Filter {
  id        Int              @id @default(autoincrement())
  createdAt DateTime         @default(now()) @map("created_at")
  updatedAt DateTime         @updatedAt @map("updated_at")
  stream    Stream           @relation(fields: [streamId], references: [id])
  streamId  Int              @map("stream_id")
  type      FilterTypes
  operation FilterOperations
  value     String

  @@map("filters")
}
